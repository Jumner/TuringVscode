{
	"For Loop": {
		"prefix": "for",
		"body": [
			"for ${1:i} : ${2:/* from */}..${3:/* to */}",
			"\t${4:/* code */}",
			"end for"
		],
		"description": "For Loop"
	},
	"Foreach Loop": {
		"prefix": "foreach",
		"body": [
			"for ${1:i} : ${2:1}..${3:length(${4:/* array */})}",
			"\t${4:/* code */}",
			"end for"
		],
		"description": "Foreach Loop"
	},
	"If Statement": {
		"prefix": "if",
		"body": [
			"if ${1:/* condition */} then",
			"\t${2:/* code */}",
			"end if"
		],
		"description": "If Statement"
	},
	"If Else statement": {
		"prefix": "if else",
		"body": [
			"if ${1:/* condition */} then",
			"\t${2:/* code */}",
			"else",
			"\t${3:/* code */}",
			"end if"
		],
		"description": "If Else statement"
	},
	"Else If Statement": {
		"prefix": ["elsif", "elif"],
		"body": [
			"elsif ${1:/* condition */} then",
			"\t${2:/* code */}"
		],
		"description": "Else If Statement"
	},
	"Else Statement": {
		"prefix": "else",
		"body": [
			"else",
			"\t${1:/* code */}"
		],
		"description": "Else Statement"
	},
	"Loop": {
		"prefix": "loop",
		"body": [
			"loop",
			"\t${1:/* code */}",
			"end loop"
		],
		"description": "Loop"
	},
	"Procedure": {
		"prefix": "procedure",
		"body": [
			"procedure ${1:/* name */} ${2:(${3:/* parameters */})}",
			"\t${4:/* code */}",
			"end ${1:/* name */}"
		],
		"description": "Procedure"
	},
	"Function": {
		"prefix": "function",
		"body": [
			"function ${1:/* name */} ${2:(${3:/* parameters */})} : ${4|int,real,boolean,string,pointer to |}",
			"\t${5:/* code */}",
			"\tresult ${6: /* value */}",
			"end ${1:/* name */}"
		],
		"description": "Procedure"
	},
	"Variable": {
		"prefix": "var",
		"body": [
			"var ${1:/* name */} : ${2|int,real,boolean,string,pointer to |} ${3::= ${4:/* value */}}"
		],
		"description": "Variable"
	},
	"Array": {
		"prefix": ["array", "list"],
		"body": [
			"var ${1:/* name */} : array ${2:/* from */}..${3:/* to */}${4:, ${5:/* from */}..${6:/* to */}} of ${7|int,real,boolean,string,pointer to |}"
		],
		"description": "Array"
	},
	"Get Value": {
		"prefix": "getValue",
		"body": [
			"var ${1:/* name */} : ${2|int,real|}",
			"var ${1:/* name */}Str : string",
			"put ${3:\"${4:/* ask user */}\"}",
			"get ${1:/* name */}Str",
			"if str${2|int,real|}ok(${1:/* name */}Str) then",
			"\t${1:/* name */} := str${2|int,real|}(${1:/* name */}Str)",
			"end if"
		],
		"description": "Get Value"
	},
	"Class": {
		"prefix": "class",
		"body": [
			"class ${1:/* name */}",
			"\timport ${2:/* variables and methods */}",
			"\texport ${3:/* variables and methods */}",
			"\t${0:/* code */}",
			"end ${1:/* name */}"
		],
		"description": "Class"
	},
	"Instantiate Class": {
		"prefix": "instantiate",
		"body": [
			"var ${1:/* name */} : ^${2:/* class */}",
			"new ${2:/* class */}, ${1:/* name */}"
		],
		"description": "Instantiate Class"
	},
	"Module": {
		"prefix": ["module", "static class"],
		"body": [
			"module ${1:/* name */}",
			"\timport ${2:/* variables and methods */}",
			"\texport ${3:/* variables and methods */}",
			"\t${0:/* code */}",
			"end ${1:/* name */}"
		],
		"description": "Module"
	},
	"Case": {
		"prefix": ["case", "switch"],
		"body": [
			"case ${1:/* expression */}",
			"\tlabel ${2:/* case */} : ${3:/* code */}",
			"\tlabel : ${4:/* default */}",
			"end case"
		]
	}
}